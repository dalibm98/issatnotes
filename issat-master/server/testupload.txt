import express from 'express';
import multer from 'multer';
import xlsx from 'xlsx';
import * as XLSX from 'xlsx/xlsx.mjs';
import mysql from 'mysql';

const app = express();
const port = process.env.PORT || 3000;

// Configuration de la connexion à la base de données MySQL
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'resultat',
});

// Middleware pour gérer les téléchargements de fichiers Excel
const storage = multer.memoryStorage();
const upload = multer({ storage });

// Middleware pour permettre les requêtes CORS (à adapter en fonction de vos besoins)
app.use((req, res, next) => {
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
  next();
});

// Route pour l'importation de données à partir d'un fichier Excel
app.post('/import', upload.single('excelFile'), (req, res) => {
  const workbook = xlsx.read(req.file.buffer, { type: 'buffer' });
  const sheetName = workbook.SheetNames[0];
  const sheet = workbook.Sheets[sheetName];
  const data = xlsx.utils.sheet_to_json(sheet);

  // Insérez les données dans la base de données MySQL
  const sql = 'INSERT INTO results (N_Inscription, CIN, Nom_Prenom_Fr, Prenom_Nom_Ar, Moyenne, Credits) VALUES ?';
  const values = data.map((row) => [
    row['N° Inscription'],
    row['CIN'],
    row['Nom & Prénom Fr'],
    row['Prénom & Nom Ar'],
    row['Moyenne'],
    row['Crédits'],
  ]);

  db.query(sql, [values], (err, result) => {
    if (err) {
      console.error('Erreur lors de l\'insertion des données :', err);
      res.status(500).json({ message: 'Erreur lors de l\'importation des données' });
    } else {
      res.json({ message: 'Données importées avec succès' });
    }
  });
});


app.get('/etudiant/:cin', (req, res) => {
  const cin = req.params.cin;
  const sql = 'SELECT * FROM results WHERE CIN = ?';

  db.query(sql, [cin], (err, results) => {
    if (err) {
      console.error('Erreur lors de la récupération des données de l\'étudiant :', err);
      res.status(500).json({ message: 'Erreur lors de la récupération des données de l\'étudiant' });
    } else {
      res.json({ etudiant: results });
    }
  });
});

app.listen(port, () => {
  console.log(`Serveur en cours d'exécution sur le port ${port}`);
});
